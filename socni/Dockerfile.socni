# Build stage
FROM rust:1.73-slim-bookworm as builder

WORKDIR /workspace

# Install build dependencies
RUN apt-get update && \
    apt-get install -y pkg-config libssl-dev build-essential git && \
    rm -rf /var/lib/apt/lists/*

# Copy the entire project for proper dependency resolution
COPY . .

# Build the binaries
RUN cd socni && cargo build --release

# Final stage
FROM debian:bookworm-slim

WORKDIR /

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y iproute2 bash sudo && \
    rm -rf /var/lib/apt/lists/*

# Create necessary directories
RUN mkdir -p /opt/cni/bin /etc/cni/net.d

# Copy binaries from builder stage
COPY --from=builder /workspace/socni/target/release/socni /opt/cni/bin/vlan
COPY --from=builder /workspace/socni/target/release/socni-ctl /usr/local/bin/socni-ctl

# Make binaries executable
RUN chmod +x /opt/cni/bin/vlan /usr/local/bin/socni-ctl

# Copy installation scripts
COPY socni/scripts/install-cni.sh /install-cni.sh
COPY socni/scripts/install-cli.sh /install-cli.sh
RUN chmod +x /install-cni.sh /install-cli.sh

# Create a wrapper script that can handle different installation options
RUN echo '#!/bin/bash\n\
if [ "$1" = "cni" ]; then\n\
  /install-cni.sh\n\
elif [ "$1" = "cli" ]; then\n\
  /install-cli.sh\n\
else\n\
  echo "VLAN CNI Plugin Container"\n\
  echo ""\n\
  echo "Available commands:"\n\
  echo "  - /install-cni.sh                 # Install the CNI plugin"\n\
  echo "  - /install-cli.sh                 # Install the CLI tool"\n\
  echo "  - /opt/cni/bin/vlan              # Run the CNI plugin directly"\n\
  echo "  - socni-ctl --help               # Show CLI tool help"\n\
fi' > /entrypoint.sh && chmod +x /entrypoint.sh

# Set the entrypoint
ENTRYPOINT ["/entrypoint.sh"]
CMD []